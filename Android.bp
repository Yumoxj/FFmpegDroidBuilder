// 依赖项
build = [
  "compat_files.bp",
  "avutil_files.bp",
  "avfilter_files.bp",
  "avcodec_files.bp",
  "avformat_files.bp",
  "swresample_files.bp",
  "swscale_files.bp",
]

// 编译选项默认值
cc_defaults {
  name: "libFFmpeg_defaults",

  cflags: [
    //"-D__ANDROID__",
    "-DHAVE_AV_CONFIG_H",
  ],

  arch: {
    arm: {
      cflags: [
      "-DARCH_ARM=1",
      "-DARCH_AARCH64=0",
      ],

      asflags: [
      "-DARCH_ARM=1",
      "-DARCH_AARCH64=0",
      ],
    },

    arm64: {
      cflags: [
      "-DARCH_AARCH64=1",
      "-DARCH_ARM=0",
      ],

      asflags: [
      "-DARCH_AARCH64=1",
      "-DARCH_ARM=0",
      ],
    },
  },
}


cc_library {
    name: "libFFmpeg",

    defaults: ["libFFmpeg_defaults"],

    local_include_dirs: [
    ],

    export_include_dirs: [
        ".",
    ],

    // android 10 平台需设置该选项为 false 以停用 XOM
    // xom: false,

    // 默认同时编译 32 和 64 位的代码。若放开下列注释，则可只编译 64 位的代码
    // compile_multilib: "64",

    arch: {
      arm: {
        instruction_set: "arm",

        srcs: [
          ":avutil-src-arm",
          ":avcodec-src-arm",
          ":avfilter-src-arm",
          ":swresample-src-arm",
          ":swrscale-src-arm",
        ],

        // ARM 架构编译选项
        cflags: [
          "-marm",
          "-mfloat-abi=softfp",
          "-march=armv7-a",
          "-mfpu=neon",
        ],

        // ARM 架构链接选项
        ldflags: [
          "-march=armv7-a",
        ],

        // ARM 架构汇编选项
        asflags: [
          "-mfloat-abi=softfp",
          "-march=armv7-a",
          "-mfpu=neon",
        ]
      },

      arm64: {
        srcs: [
          ":avutil-src-arm64",
          ":avfilter-src-arm64",
          ":avcodec-src-arm64",
          ":swresample-src-arm64",
          ":swrscale-src-arm64",
        ],

        // ARM64 架构编译选项
        cflags: [
          "-mfpu=neon",
          "-march=armv8-a",
        ],

        // ARM64 架构链接选项
        ldflags: [
          "-march=armv8-a",
        ],

        // ARM64 架构汇编选项
        asflags: [
          "-march=armv8-a",
          "-mfpu=neon",
        ],
      },
    },

    srcs: [
      ":compat-src",
      ":avutil-src-common",
      ":avfilter-src-common",
      ":avcodec-src-common",
      ":swresample-src-common",
      ":swrscale-src-common",
      ":avformat-src",
    ],

    shared_libs: [
      "libz",
      "libc",
      "libnativehelper",
    ],

    static_libs: [
    ],

    // 全局编译选项
    cflags: [
      // CPPFLAGS
      "-D_FILE_OFFSET_BITS=64",
      "-D_ISOC99_SOURCE",
      "-D_LARGEFILE_SOURCE",
      "-DPIC",
      "-Dstrtod=avpriv_strtod",
      "-DZLIB_CONST",

      // CFLAGS
      "-fno-math-errno",
      "-fno-signed-zeros",
      "-fomit-frame-pointer",
      "-fpic",
      "-fPIC",
      "-fPIE",
      "-g",
      "-mno-stackrealign",
      "-mstack-alignment=16",
      "-Os",
      "-Oz",
      "-pthread",
      "-Qunused-arguments",
      "-std=c11",
      "-Wall",
      "-Wdeclaration-after-statement",
      "-Wdisabled-optimization",
      "-Wempty-body",
      "-Werror=implicit-function-declaration",
      "-Werror=missing-prototypes",
      "-Werror=return-type",
      "-Wmissing-prototypes",
      "-Wno-bool-operation",
      "-Wno-char-subscripts",
      "-Wno-format-zero-length",
      "-Wno-parentheses",
      "-Wno-pointer-sign",
      "-Wno-switch",
      "-Wno-unused-const-variable",
      "-Wpointer-arith",
      "-Wredundant-decls",
      "-Wstrict-prototypes",
      "-Wtype-limits",
      "-Wundef",
      "-Wwrite-strings",

      // CXXFLAGS
      "-D__STDC_CONSTANT_MACROS",
      "-std=c++11",

      //"-Wl,--gc-sections",
      //"-fdata-sections",
      //"-ffunction-sections",
      //"-flto",
    ],

    // 全局链接选项
    ldflags: [
      "-Qunused-arguments",
      "-Wl,--as-needed",
      "-Wl,--warn-common",
      "-Wl,-z,noexecstack",

      "-Wl,-Bsymbolic",
      //"-Wl,--gc-sections",
      //"-fdata-sections",
      //"-ffunction-sections",
      //"-flto",
    ],

    // 全局汇编选项
    asflags: [
      "-fpic",
      "-fPIC",
      "-g",
      "-mno-stackrealign",
      "-Os",
      "-Qunused-arguments",
    ],
}

cc_binary {
  name: "ffprobe",

  defaults: ["libFFmpeg_defaults"],

  cflags: [
    "-Wno-error",
  ],

  srcs: [
    "fftools/opt_common.c",
    "fftools/cmdutils.c",
    "fftools/ffprobe.c",
  ],

  shared_libs: [
    "libFFmpeg",
  ],
}

cc_binary {
  name: "ffmpeg",

  defaults: ["libFFmpeg_defaults"],

  cflags: [
    "-Wno-error",
  ],

  srcs: [
    "fftools/cmdutils.c",
    "fftools/ffmpeg.c",
    "fftools/ffmpeg_filter.c",
    "fftools/ffmpeg_hw.c",
    "fftools/ffmpeg_mux.c",
    "fftools/ffmpeg_opt.c",
    "fftools/opt_common.c",
  ],

  shared_libs: [
    "libFFmpeg",
  ],
}